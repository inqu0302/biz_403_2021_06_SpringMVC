<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Servlet-context.xml 파일에는 Controller 클래스 이후의 할일들, 기능등에 대한 설정이 있다. -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 클래스에 @Component 등을 설정하였을때 spring 컨테이너에 보관 요청을 하는 설정 -->
	<annotation-driven />
	
	<!-- localhos:8080/hello/static/*** 으로 요청을 하면 webapp/static 폴더에있는 *** 파일을 찾는다
		그리고 바로 reponse를 한다.
	 -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/static/**" location="/static/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- Spring 컨테이너가 클래스를 객체로 생성하여 보관하는데 그때 생성된 객체들을 Web Project 에서는 보통 bean이라고 부른다 
		InternalResourceViewResolver 클래스를 사용하고 싶으니 bean으로 만들어서 컨테이너에 보관해달라
		이 클래스의 어떤 method를 호출하려고 했더니 클래스 맴버변수(private) 중에 prefix라는 변수값과
		suffix라는 변수값이 필요하다
		
		그래서 미리 변수값을 setter 해달라고 지정
		property로 저장한다.
		-->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- component
		클래스를 객체로 선언하여 만들어둔 요소를 언제든지 사용할 준비가 된 상태 
		
		Scan을 할때 scan을 하지 않아도 될 클래스까지 scan하여 비효율적이다
		그것을 방지하기 위하여 scan범위를 controller 와 service로 제한하는게 좋다
		-->
	
	<context:component-scan base-package="com.callor.hello.controller" />
	<context:component-scan base-package="com.callor.hello.service" />
	
	
	
</beans:beans>
